#!/bin/bash

# Script para aplicar a migration de verifica√ß√£o de email
echo "üîß Aplicando migration de verifica√ß√£o de email..."

# Verificar se o arquivo de migration existe
MIGRATION_FILE="backend/migrations/20250117000000-create-email-verification-tokens.sql"

if [ ! -f "$MIGRATION_FILE" ]; then
    echo "‚ùå Arquivo de migration n√£o encontrado: $MIGRATION_FILE"
    exit 1
fi

echo "üìÑ Migration encontrada: $MIGRATION_FILE"

# Verificar se o Docker est√° rodando
if ! docker ps > /dev/null 2>&1; then
    echo "‚ùå Docker n√£o est√° rodando. Inicie o Docker primeiro."
    exit 1
fi

# Verificar se o container est√° rodando
if ! docker-compose ps | grep -q "app.*Up"; then
    echo "‚ùå Container da aplica√ß√£o n√£o est√° rodando. Execute 'docker-compose up -d' primeiro."
    exit 1
fi

echo "üê≥ Aplicando migration via Docker..."

# Aplicar a migration
docker-compose exec -T postgres psql -U postgres -d spark_course < "$MIGRATION_FILE"

if [ $? -eq 0 ]; then
    echo "‚úÖ Migration aplicada com sucesso!"
    echo ""
    echo "üìã Pr√≥ximos passos:"
    echo "1. Reinicie o container da aplica√ß√£o: docker-compose restart app"
    echo "2. Teste o fluxo de cadastro com verifica√ß√£o de email"
    echo "3. Configure as vari√°veis SMTP se ainda n√£o configurou"
    echo ""
    echo "üîß Para testar, acesse a aplica√ß√£o e tente criar uma nova conta."
    echo "üìß O sistema enviar√° um email de verifica√ß√£o antes de criar a conta."
else
    echo "‚ùå Erro ao aplicar migration"
    exit 1
fi 