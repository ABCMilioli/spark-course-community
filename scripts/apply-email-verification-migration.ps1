# Script PowerShell para aplicar a migration de verifica√ß√£o de email
Write-Host "üîß Aplicando migration de verifica√ß√£o de email..." -ForegroundColor Cyan

# Verificar se o arquivo de migration existe
$MIGRATION_FILE = "backend/migrations/20250117000000-create-email-verification-tokens.sql"

if (-not (Test-Path $MIGRATION_FILE)) {
    Write-Host "‚ùå Arquivo de migration n√£o encontrado: $MIGRATION_FILE" -ForegroundColor Red
    exit 1
}

Write-Host "üìÑ Migration encontrada: $MIGRATION_FILE" -ForegroundColor Green

# Verificar se o Docker est√° rodando
try {
    docker ps | Out-Null
} catch {
    Write-Host "‚ùå Docker n√£o est√° rodando. Inicie o Docker primeiro." -ForegroundColor Red
    exit 1
}

# Verificar se o container est√° rodando
try {
    $containerStatus = docker-compose ps | Select-String "app.*Up"
    if (-not $containerStatus) {
        Write-Host "‚ùå Container da aplica√ß√£o n√£o est√° rodando. Execute 'docker-compose up -d' primeiro." -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Erro ao verificar status do container." -ForegroundColor Red
    exit 1
}

Write-Host "üê≥ Aplicando migration via Docker..." -ForegroundColor Yellow

# Aplicar a migration
try {
    Get-Content $MIGRATION_FILE | docker-compose exec -T postgres psql -U postgres -d spark_course
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Migration aplicada com sucesso!" -ForegroundColor Green
        Write-Host ""
        Write-Host "üìã Pr√≥ximos passos:" -ForegroundColor Cyan
        Write-Host "1. Reinicie o container da aplica√ß√£o: docker-compose restart app" -ForegroundColor White
        Write-Host "2. Teste o fluxo de cadastro com verifica√ß√£o de email" -ForegroundColor White
        Write-Host "3. Configure as vari√°veis SMTP se ainda n√£o configurou" -ForegroundColor White
        Write-Host ""
        Write-Host "üîß Para testar, acesse a aplica√ß√£o e tente criar uma nova conta." -ForegroundColor Cyan
        Write-Host "üìß O sistema enviar√° um email de verifica√ß√£o antes de criar a conta." -ForegroundColor Cyan
    } else {
        Write-Host "‚ùå Erro ao aplicar migration" -ForegroundColor Red
        exit 1
    }
} catch {
    Write-Host "‚ùå Erro ao executar migration: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
} 